// clang-format off
// Generated file (from: local_response_normalization_v1_2.mod.py). Do not edit
std::vector<MixedTypedExample> examples_axis_dim4_axis0 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis0_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis0_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis0_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f, -0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f, -0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f, -0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f, -0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, -0.55f, -0.55f, 0.3f, 0.3f, 0.3f, 0.3f, 0.35f, 0.35f, 0.35f, 0.35f, 0.6f, 0.6f, 0.6f, 0.6f, -0.35f, -0.35f, -0.35f, -0.35f, 0.05f, 0.05f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f, -0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f, -0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, -0.55f, 0.3f, 0.3f, 0.35f, 0.35f, 0.6f, 0.6f, -0.35f, -0.35f, 0.05f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, -0.550000011920929f, 0.30000001192092896f, 0.30000001192092896f, 0.3499999940395355f, 0.3499999940395355f, 0.6000000238418579f, 0.6000000238418579f, -0.3499999940395355f, -0.3499999940395355f, 0.05000000074505806f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f, -0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f, -0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0_neg = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.55f, 0.3f, 0.35f, 0.6f, -0.35f, 0.05f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0_neg_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.550000011920929f, 0.30000001192092896f, 0.3499999940395355f, 0.6000000238418579f, -0.3499999940395355f, 0.05000000074505806f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis0_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis0_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis0_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis0_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f, -0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f, -0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f, -0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f, -0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, -0.22f, -0.22f, 0.12f, 0.12f, 0.12f, 0.12f, 0.14f, 0.14f, 0.14f, 0.14f, 0.24f, 0.24f, 0.24f, 0.24f, -0.14f, -0.14f, -0.14f, -0.14f, 0.02f, 0.02f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f, -0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f, -0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, -0.22f, 0.12f, 0.12f, 0.14f, 0.14f, 0.24f, 0.24f, -0.14f, -0.14f, 0.02f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, -0.2199999988079071f, 0.11999999731779099f, 0.11999999731779099f, 0.14000000059604645f, 0.14000000059604645f, 0.23999999463558197f, 0.23999999463558197f, -0.14000000059604645f, -0.14000000059604645f, 0.019999999552965164f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f, -0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f, -0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0_neg_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.22f, 0.12f, 0.14f, 0.24f, -0.14f, 0.02f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0_neg_float16_2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.2199999988079071f, 0.11999999731779099f, 0.14000000059604645f, 0.23999999463558197f, -0.14000000059604645f, 0.019999999552965164f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis0_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis0_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis0_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis0_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis1_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis2_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim4_axis3_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis0_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis1_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim3_axis2_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis0_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim2_axis1_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_dim1_axis0_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis0_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f, -1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis1_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis2_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim4_axis3_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.6f, 0.6f, 0.7f, 0.7f, 0.7f, 0.7f, 1.2f, 1.2f, 1.2f, 1.2f, -0.7f, -0.7f, -0.7f, -0.7f, 0.1f, 0.1f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis0_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f, -1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f, -0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis1_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f, -1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f, -0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim3_axis2_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, -1.1f, 0.6f, 0.6f, 0.7f, 0.7f, 1.2f, 1.2f, -0.7f, -0.7f, 0.1f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, -0.26492569f, 0.12510864f, 0.12510864f, 0.14011213f, 0.14011213f, 0.26726127f, 0.26726127f, -0.16178755f, -0.16178755f, 0.0244266f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis0_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, -1.100000023841858f, 0.6000000238418579f, 0.6000000238418579f, 0.699999988079071f, 0.699999988079071f, 1.2000000476837158f, 1.2000000476837158f, -0.699999988079071f, -0.699999988079071f, 0.10000000149011612f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, -0.26492568850517273f, 0.12510864436626434f, 0.12510864436626434f, 0.14011213183403015f, 0.14011213183403015f, 0.267261266708374f, 0.267261266708374f, -0.16178755462169647f, -0.16178755462169647f, 0.024426599964499474f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim2_axis1_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0_neg_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_axis_relaxed_dim1_axis0_neg_float16_3 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_dim1_axis0 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_dim1_axis0_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_dim2_axis1 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_dim2_axis1_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_dim3_axis2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_dim3_axis2_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_relaxed_dim1_axis0 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_relaxed_dim1_axis0_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_relaxed_dim2_axis1 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_relaxed_dim2_axis1_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_relaxed_dim3_axis2 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f, -1.1f, 0.6f, 0.7f, 1.2f, -0.7f, 0.1f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {{0, {-0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f, -0.26492569f, 0.12510864f, 0.14011213f, 0.26726127f, -0.16178755f, 0.0244266f}}},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {},
}
},
}, // End of an example
};

std::vector<MixedTypedExample> examples_relaxed_dim3_axis2_float16 = {
// Begin of an example
{
.operands = {
//Input(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f, -1.100000023841858f, 0.6000000238418579f, 0.699999988079071f, 1.2000000476837158f, -0.699999988079071f, 0.10000000149011612f}}},
},
//Output(s)
{ // See tools/test_generator/include/TestHarness.h:MixedTyped
  // int -> FLOAT32 map
  {},
  // int -> INT32 map
  {},
  // int -> QUANT8_ASYMM map
  {},
  // int -> QUANT16_SYMM map
  {},
  // int -> FLOAT16 map
  {{0, {-0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f, -0.26492568850517273f, 0.12510864436626434f, 0.14011213183403015f, 0.267261266708374f, -0.16178755462169647f, 0.024426599964499474f}}},
}
},
}, // End of an example
};

